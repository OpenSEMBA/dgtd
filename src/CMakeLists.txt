if (SEMBA_DGTD_ENABLE_MPI)
	message(STATUS "SEMBA_DGTD_ENABLE_MPI:" ${SEMBA_DGTD_ENABLE_MPI})
	add_compile_definitions(SEMBA_DGTD_ENABLE_MPI)
endif()

if (SEMBA_DGTD_ENABLE_OPENMP)
	FIND_PACKAGE(OpenMP REQUIRED)
	IF(OpenMP_FOUND)
		message(STATUS "SEMBA_DGTD_ENABLE_OPENMP:" ${SEMBA_DGTD_ENABLE_OPENMP})
  		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
 		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
		add_compile_definitions(SEMBA_DGTD_ENABLE_OPENMP)
	endif()
endif()

if (SEMBA_DGTD_ENABLE_CUDA)
    enable_language(CUDA)
    set(CMAKE_CUDA_ARCHITECTURES 89)
    set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} --expt-extended-lambda")
	add_compile_definitions(SEMBA_DGTD_ENABLE_CUDA)
endif()

if(SEMBA_DGTD_ENABLE_TIMER_INFORMATION)
	add_definitions(-DSHOW_TIMER_INFORMATION)
endif()

if (SEMBA_DGTD_ENABLE_STATISTICS_RECORD)
	add_definitions(-DENABLE_STATISTICS_RECORD)
endif()

add_subdirectory(launcher)
add_subdirectory(driver)
add_subdirectory(components)
add_subdirectory(evolution)
add_subdirectory(math)
add_subdirectory(mfemExtension)
add_subdirectory(solver)